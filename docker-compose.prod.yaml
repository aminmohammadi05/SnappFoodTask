version: '3.9'

services:
  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    # volumes:
    #   - "mongodb_data_container:/data/db"

  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CREATE_TOPICS= "OrderManagement:1:1"
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  # Database Container spec.
  sql:
    container_name: snapp-food-sql
    image: snapp-food-sql:v1.0.8
    user: root
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'Pa55w0rd<db0562096>'
      TZ: 'Asia/Tehran'
    build:
      context: ./DockerSqlServerDB
      dockerfile: DockerFile_SQL
    ports:
      - 1433:1433

    # volumes:
    #   - /root/sqlserver/data:/var/opt/mssql/data
    #   - /root/sqlserver/log:/var/opt/mssql/log
    #   - /root/sqlserver/secrets:/var/opt/mssql/secrets

  # Command API container spec.
  api-command:
    container_name: snapp-food-api-command
    image: snapp-food-api-command:v1.0.35
    build:
      context: .
      dockerfile: DockerFile_command
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5555
    ports:
      - 5555:5555
    depends_on:
      - sql
      - kafka
      - redis
      - mongo
    links:
     - sql
     - kafka
     - redis
     - mongo

    # volumes:
    #  - /root/command-api/App_Data:/app/App_Data
    #  - /root/command-api/wwwroot:/app/wwwroot
  # Query API container spec.
  api-query:
    container_name: snapp-food-api-query
    image: snapp-food-api-query:v1.0.35
    build:
      context: .
      dockerfile: DockerFile_query
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5556
    ports:
      - 5556:5555
    depends_on:
      - sql
      - kafka
      - redis
      - mongo
    links:
     - sql
     - kafka
     - redis
     - mongo

    # volumes:
    #  - /root/query-api/App_Data:/app/App_Data
    #  - /root/query-api/wwwroot:/app/wwwroot
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
   
# networks:
#   default:
#     name: snappnetwork
#     external: true
